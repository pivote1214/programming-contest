#!/usr/bin/env python3
import sys


def solve(N: int, a: "List[int]"):
    lack = [0] * (N + 1)
    set_a = set(a)
    for i in range(1, N + 1):
        if i in set_a:
            lack[i] = lack[i-1]
        else:
            lack[i] = lack[i-1] + 1

    ans = N
    for i in range(1, N + 1):
        if 2 * lack[i] > (N - i + lack[i]):
            ans = i - 1
            break

    print(ans)
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    a = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, a)

if __name__ == '__main__':
    main()

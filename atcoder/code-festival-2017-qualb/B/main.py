#!/usr/bin/env python3
import sys
from collections import Counter

YES = "YES"  # type: str
NO = "NO"  # type: str


def solve(N: int, D: "List[int]", M: int, T: "List[int]"):
    C = Counter(D)
    ans = YES
    for i in range(M):
        if T[i] in C.keys():
            if C[T[i]] == 1:
                C.pop(T[i])
            else:
                C[T[i]] -= 1
        else:
            ans = NO

    print(ans)
    return

# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    D = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    M = int(next(tokens))  # type: int
    T = [int(next(tokens)) for _ in range(M)]  # type: "List[int]"
    solve(N, D, M, T)

if __name__ == '__main__':
    main()
